@page "/admin/product-types"
@inject IProductTypeService _productTypeService
@implements IDisposable
@attribute [Authorize(Roles ="Admin")]
<h3>
    <strong>Product Types</strong>
</h3>
@foreach (var productType in _productTypeService.ProductTypes)
{
    @if (productType.Editing)
    {
        <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
            <div class="row">
                <InputText @bind-Value="editingProductType.Name" class="form-control"  />
            </div>
            <div class="col">
                <button type="submit" class="btn btn-primary">
                    <i class="oi oi-cloud-upload"></i>
                </button>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row" style="mb-2">
            <div class="col">
                @productType.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="(()=>EditProductType(productType))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Add new product type
</button>



@code {
    ProductType editingProductType = null;
    protected override async Task OnInitializedAsync()
    {
        await _productTypeService.GetProductTypes();
        _productTypeService.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        _productTypeService.OnChange -= StateHasChanged;
    }

    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        editingProductType = productType;
    }
    private void CreateNewProductType()
    {
        editingProductType = _productTypeService.CreateNewProductType();
    }

    public async Task UpdateProductType()
    {
        if (editingProductType.IsNew)
        {
            await _productTypeService.AddProductType(editingProductType);
        }
        else
        {
            await _productTypeService.UpdateProductType(editingProductType);
        }
        editingProductType = new ProductType();
    }

}
